# /etc/apache2/sites-available/super.sec7.sindome.org.conf

# ─────────────────────────────────────────────────────────
# HTTP vhost: redirect everything to HTTPS
# ─────────────────────────────────────────────────────────
<VirtualHost *:80>
    ServerName super.sec7.sindome.org
    # ServerAlias www.super.sec7.sindome.org

    # Required modules: a2enmod proxy proxy_http rewrite
    ProxyPreserveHost On

    # Send ONLY /health to Node on localhost:3000 over HTTP
    ProxyPass        /health http://127.0.0.1:3000/health
    ProxyPassReverse /health http://127.0.0.1:3000/health

    # Redirect everything else to HTTPS
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/health(?:/|$)
    RewriteRule ^/(.*)$ https://super.sec7.sindome.org/$1 [R=301,L]

    ErrorLog  ${APACHE_LOG_DIR}/nodervisor_http_error.log
    CustomLog ${APACHE_LOG_DIR}/nodervisor_http_access.log combined
</VirtualHost>
# ─────────────────────────────────────────────────────────
# HTTPS vhost: reverse proxy to Node.js on 127.0.0.1:3000
# ─────────────────────────────────────────────────────────
<VirtualHost *:443>
    ServerName super.sec7.sindome.org
    # ServerAlias www.super.sec7.sindome.org

    # --- SSL (self-signed) ---
    SSLEngine on
    #SSLCertificateFile      /etc/apache2/ssl/nodervisor.crt
    #SSLCertificateKeyFile   /etc/apache2/ssl/nodervisor.key

    # (If using Let's Encrypt instead, replace the 3 lines above with:)
    SSLCertificateFile      /etc/letsencrypt/live/super.nlm.sindome.org/fullchain.pem
    SSLCertificateKeyFile   /etc/letsencrypt/live/super.nlm.sindome.org/privkey.pem

    # --- Recommended security headers (safe defaults) ---
    # a2enmod headers
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-Frame-Options "DENY"
    Header always set Referrer-Policy "no-referrer-when-downgrade"
    # Enable HSTS only when you're confident HTTPS is permanent:
    # Header always set Strict-Transport-Security "max-age=15552000; includeSubDomains"

    # If you want to set CSP here (you can also do via Helmet in Node):
    # Header always set Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self'; object-src 'none'; base-uri 'none'; frame-ancestors 'none'"

    # --- Proxy to Node.js ---
    # Ensure modules: a2enmod proxy proxy_http proxy_wstunnel
    ProxyPreserveHost On

    # Forward TLS awareness to your app (so req.protocol === 'https' in Express with app.set('trust proxy', true))
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-SSL "on"

    # Main HTTP proxy (all routes)
    ProxyPass        / http://127.0.0.1:3000/
    ProxyPassReverse / http://127.0.0.1:3000/

    # WebSockets (socket.io, etc.)
    ProxyPassMatch   ^/socket.io/(.*) ws://127.0.0.1:3000/socket.io/$1
    ProxyPassReverse ^/socket.io/     http://127.0.0.1:3000/socket.io/

    # If your app serves large uploads/downloads, you may tune timeouts:
    # ProxyTimeout 120
    # Timeout 120

    # Logs
    ErrorLog  ${APACHE_LOG_DIR}/nodervisor_ssl_error.log
    CustomLog ${APACHE_LOG_DIR}/nodervisor_ssl_access.log combined
</VirtualHost>

